{% extends 'base.html.twig' %}

{% block body %}
<div class="container">
    <h1>CRÉATION DU BON DE LIVRAISON</h1>
    <!-- <div class="well">{{ "now"|date(' H:i') }}</div> -->

    <!-- {#<div class="well form">#}
        {#{{ form(form) }}#}
    {#</div>#} -->

    <div class="well">
        {{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}

             {# Les erreurs générales du formulaire. #}
             {{ form_errors(form) }}

            {# Génération du label + error + widget pour un champ. #}
            {{ form_row(form.dateBdl) }}

        {# Génération manuelle et éclatée : #}

        <div class="form-group">
          {# Idem pour le champ Client. #}

            {{ form_label(form.clientBdl, "Client", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
            {{ form_errors(form.clientBdl) }}
                <div class="col-sm-10">
                    {# Génération de l'input. #}
                    {{ form_widget(form.clientBdl, {'attr': {'class': 'form-control'}}) }}
                </div>
        </div>

        <div class="form-group">
          {# Idem pour le champ Articles. #}
            {{ form_label(form.article1, "Article 1", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
            {{ form_errors(form.article1) }}
                <div class="col-sm-10">
                    {# Génération de l'input. #}
                    {{ form_widget(form.article1, {'attr': {'class': 'form-control'}}) }}
                </div>
        </div>

        <div class="form-group">
          {# Idem pour le champ Quantité. #}
            {{ form_label(form.quantite1, "Quantité article 1", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
            {{ form_errors(form.quantite1) }}
                <div class="col-sm-10">
                    {# Génération de l'input. #}
                    {{ form_widget(form.quantite1, {'attr': {'class': 'form-control'}}) }}
                </div>
        </div>

        <div class="form-group">
          {# Idem pour le champ Articles. #}
            {{ form_label(form.article2, "Article 2", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
            {{ form_errors(form.article2) }}
                <div class="col-sm-10">
                    {# Génération de l'input. #}
                    {{ form_widget(form.article2, {'attr': {'class': 'form-control'}}) }}
                </div>
        </div>

        <div class="form-group">
          {# Idem pour le champ Quantité. #}
            {{ form_label(form.quantite2, "Quantité article 2", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
            {{ form_errors(form.quantite2) }}
                <div class="col-sm-10">
                    {# Génération de l'input. #}
                    {{ form_widget(form.quantite2, {'attr': {'class': 'form-control'}}) }}
                </div>
        </div>

        <div class="form-group">
          {# Idem pour le champ Articles. #}
            {{ form_label(form.article3, "Article 3", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
            {{ form_errors(form.article3) }}
                <div class="col-sm-10">
                    {# Génération de l'input. #}
                    {{ form_widget(form.article3, {'attr': {'class': 'form-control'}}) }}
                </div>
        </div>

        <div class="form-group">
          {# Idem pour le champ Quantité. #}
            {{ form_label(form.quantite3, "Quantité article 3", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
            {{ form_errors(form.quantite3) }}
                <div class="col-sm-10">
                    {# Génération de l'input. #}
                    {{ form_widget(form.quantite3, {'attr': {'class': 'form-control'}}) }}
                </div>
        </div>

        {# Idem pour le champ Descr. #}
        <div class="form-group">
            {{ form_label(form.descriptionBdl, "Description", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
            {{ form_errors(form.descriptionBdl) }}
            <div class="col-sm-10">
                {{ form_widget(form.descriptionBdl, {'attr': {'class': 'form-control'}}) }}
            </div>
        </div>

        <div class="form-group">
          {# Idem pour le champ Transporteur. #}
            {{ form_label(form.transporteurBdl, "Transporteur", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
            {{ form_errors(form.transporteurBdl) }}
                <div class="col-sm-10">
                    {# Génération de l'input. #}
                    {{ form_widget(form.transporteurBdl, {'attr': {'class': 'form-control'}}) }}
                </div>
        </div>



        {# Génération automatique des champs pas encore écrits.
           Dans cet exemple, ce serait le champ CSRF (géré automatiquement par Symfony !)
           et tous les champs cachés (type « hidden »). #}
        {{ form_rest(form) }}


        <div class="bdp">
            {# Pour le bouton, pas de label ni d'erreur, on affiche juste le widget #}
            {#<div>{{ form_widget(form.Valider, {'attr': {'class': 'btn btn-primary'}}) }}</div>#}
            <button class="btn btn-success" style="width: 300px; height: 60px">Valider</button>

            {# Fermeture de la balise <form> du formulaire HTML #}
            {{ form_end(form) }}
        </div>
        {#LE FORMULAIRE DE SAISIE SE TERMINE CI-DESSUS#}

        <a href="{{ path('accueil') }}"><button class="btn btn-danger" style="width: 300px; height: 60px">Retour</button></a>
    </div>
    </div>

    <!-- CHARGEMENT DE JQUERY - ATTENTION ICI LE CDN - A REMPLACER PAR UN LIEN FICHIER -->
    <!-- CI DESSOUS UN SCRIPT POUR GENERER DES CHAMPS SUPPLEMENTAIRES.
    DES TESTS ONT ETE EFFECTUES DURANT LE TEMPS DE STAGE MAIS UN MANQUE DE TEMPS N A PAS PERMIS DE RECUPERER COORECTEMENT LES DONNEES POUR LE REMPLISSAGE DES CHAMPS DU BON DE LIVRAISON. -->
    <!-- TESTS A APPROFONDIR. -->
    <!-- POUR CELA, DECOMMENTER LE SCRIPT CI-DESSOUS AINSI QUE LA PARTIE CATEGORIE COMMENTEE DANS BonslivraisonType et Bonslivraison.

    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

    {# Voici le script en question : #}
     <script type="text/javascript">
      $(document).ready(function() {
        // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
        var $container = $('div#blbundle_bonslivraison_ajouter');

        // On ajoute un lien pour ajouter une nouvelle catégorie
        var $addLink = $('<a href="#" id="add_category" class="btn btn-default">Ajouter un article</a>');
        $container.append($addLink);

        // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
        $addLink.click(function(e) {
          addCategory($container);
          e.preventDefault(); // évite qu'un # apparaisse dans l'URL
          return false;
        });

        // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
        var index = $container.find(':input').length;

        // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle annonce par exemple).
        if (index == 0) {
          addCategory($container);
        } else {
          // Pour chaque catégorie déjà existante, on ajoute un lien de suppression
          $container.children('div').each(function() {
            addDeleteLink($(this));
          });
        }

        // La fonction qui ajoute un formulaire Categorie
        function addCategory($container) {
          // Dans le contenu de l'attribut « data-prototype », on remplace :
          // - le texte "__name__label__" qu'il contient par le label du champ
          // - le texte "__name__" qu'il contient par le numéro du champ
          var $prototype = $($container.attr('data-prototype').replace(/__name__label__/g, 'Article n°' + (index+1))
              .replace(/__name__/g, index));

          // On ajoute au prototype un lien pour pouvoir supprimer la catégorie
          addDeleteLink($prototype);

          // On ajoute le prototype modifié à la fin de la balise <div>
          $container.append($prototype);

          // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
          index++;
        }

        // La fonction qui ajoute un lien de suppression d'une catégorie
        function addDeleteLink($prototype) {
          // Création du lien
          $deleteLink = $('<a href="#" class="btn btn-danger">Supprimer</a>');

          // Ajout du lien
          $prototype.append($deleteLink);

          // Ajout du listener sur le clic du lien
          $deleteLink.click(function(e) {
            $prototype.remove();
            e.preventDefault(); // évite qu'un # apparaisse dans l'URL
            return false;
          });
        }
      });
    </script> 

{% endblock %}

{% block stylesheets %}
    <style>
        * {text-align:center;}
        body html{
          height:100%;
        }
        button {
            margin-top: 40px;
        }
    </style>
{% endblock %}
